<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!-- base mybatis file for sql defined by self  -->
<mapper namespace="com.yl.work.mapper.ShareCommonMapper">

    <select id="getMaxDayIndex" resultType="int">
        select max(dayIndex) from crawler_lhb_big_people
    </select>

    <select id="getLongHuData" resultType="com.yl.work.shares.bean.LongHuData">
        <![CDATA[
      select * from (
        select result1.share_code as shareCode,
            result2.share_name as shareName,result1.sumAmount,result5.everydaylhbSum,
            result2.rise_fall_sum as "涨跌幅度",result2.quantity_trends as "量比趋势",
            result2.company_value as "市值",result4.plates as plates
        from (
            select a.share_code,TRUNCATE(sum(a.amount),2) as sumAmount
            from crawler_lhb_big_people as a
            where a.dayIndex >= #{dayIndexFrom}
            group by a.share_code
            having sum(a.amount) > 3000
        ) result1
        left join(
            select b.share_code,b.share_name,GROUP_CONCAT(b.quantity_ratio) as quantity_trends,TRUNCATE(sum(b.rise_fall),2) as rise_fall_sum,
                max(b.circulation_value_desc) as company_value from crawler_share_everyday_data as b
            where b.datekey >= CAST(DATE_FORMAT(date_add(now(), interval - (2+5) day),'%Y%m%d') AS SIGNED)
            GROUP BY b.share_code
        ) result2
        on result1.share_code = result2.share_code
        left join(
            SELECT * from all_shares
        ) result3
        on result1.share_code = result3.share_code
        left join(
            select * from share_plates
        ) result4
        on result1.share_code = result4.share_code
        left join(
            select tmp.share_code,GROUP_CONCAT('[',RIGHT(datekey,4),':',tmp.everydaySum,']') as everydaylhbSum from (
                SELECT share_code,datekey,TRUNCATE(SUM(amount),2) as everydaySum from crawler_lhb_big_people
                where datekey >= CAST(DATE_FORMAT(date_add(now(), interval - (2+5) day),'%Y%m%d') AS SIGNED)
                GROUP BY share_code,datekey
            ) as tmp	GROUP BY tmp.share_code
        ) result5
        on result1.share_code = result5.share_code
      ) as result
      ORDER BY result.sumAmount DESC
      ]]>
    </select>

    <select id="onedayLongHuData" resultType="com.yl.work.shares.bean.LongHuData">
        <![CDATA[
        select * from (
            select result1.share_code as shareCode,
                result2.share_name as shareName,
                result1.sumAmount,result5.everydaylhbSum,
                result2.rise_fall_sum as "涨跌幅度",result2.quantity_trends as "量比趋势",
                result2.company_value as "市值",result4.plates as plates
            from (
                -- 近5个交易日龙虎榜总量大于某个值的
                select a.share_code,TRUNCATE(sum(a.amount),2) as sumAmount
                from crawler_lhb_big_people as a
                where a.datekey >= CAST(DATE_FORMAT(date_add(now(), interval - (1) day),'%Y%m%d') AS SIGNED)
                group by a.share_code
            ) result1
            left join(
            --  GROUP_CONCAT('(',right(b.datekey,4),' : ',b.quantity_ratio,')')
                select b.share_code,b.share_name,GROUP_CONCAT(b.quantity_ratio) as quantity_trends,TRUNCATE(sum(b.rise_fall),2) as rise_fall_sum,
                    max(b.circulation_value_desc) as company_value from crawler_share_everyday_data as b
                where b.datekey >= CAST(DATE_FORMAT(date_add(now(), interval - (1) day),'%Y%m%d') AS SIGNED)
                GROUP BY b.share_code
            ) result2
            on result1.share_code = result2.share_code
            left join(
                SELECT * from all_shares
            ) result3
            on result1.share_code = result3.share_code
            left join(
                select * from share_plates
            ) result4
            on result1.share_code = result4.share_code
            left join(
                select tmp.share_code,GROUP_CONCAT('[',RIGHT(datekey,4),':',tmp.everydaySum,']') as everydaylhbSum from (
                    SELECT share_code,datekey,TRUNCATE(SUM(amount),2) as everydaySum from crawler_lhb_big_people
                    where datekey >= CAST(DATE_FORMAT(date_add(now(), interval - (1) day),'%Y%m%d') AS SIGNED)
                    GROUP BY share_code,datekey
                ) as tmp	GROUP BY tmp.share_code
            ) result5
            on result1.share_code = result5.share_code

        ) as result
        ORDER BY result.sumAmount DESC
      ]]>
    </select>


</mapper>