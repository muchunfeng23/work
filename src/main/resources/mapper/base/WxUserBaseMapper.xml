<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!-- base mybatis file for sql defined by tool  -->
<mapper namespace="com.yl.work.mapper.WxUserMapper">
  <!--database table: (wx_user) with javabean : (com.yl.work.entity.WxUserEntity)-->
  <resultMap id="rm_WxUserEntity" type="com.yl.work.entity.WxUserEntity">
  	<result property="id" column="id"/>
  	<result property="openId" column="openId"/>
  	<result property="nickName" column="nickName"/>
  	<result property="gender" column="gender"/>
  	<result property="language" column="language"/>
  	<result property="city" column="city"/>
  	<result property="province" column="province"/>
  	<result property="country" column="country"/>
  	<result property="avatarUrl" column="avatarUrl"/>
  	<result property="ct" column="ct"/>
  	<result property="datekey" column="datekey"/>
  </resultMap>
  
  <!--columns of table-->
  <sql id="columns">
    <![CDATA[
		id,openId,nickName,gender,language,
		city,province,country,avatarUrl,ct,
		datekey
     ]]>
  </sql>
  
  <!--the 'where' sql of search  -->
  <sql id="where_sql">
    <where>
      <if test="id != null">
        and id =  #{id}
      </if>
      <if test="openId != null">
        and openId =  #{openId}
      </if>
      <if test="nickName != null">
        and nickName =  #{nickName}
      </if>
      <if test="gender != null">
        and gender =  #{gender}
      </if>
      <if test="language != null">
        and language =  #{language}
      </if>
      <if test="city != null">
        and city =  #{city}
      </if>
      <if test="province != null">
        and province =  #{province}
      </if>
      <if test="country != null">
        and country =  #{country}
      </if>
      <if test="avatarUrl != null">
        and avatarUrl =  #{avatarUrl}
      </if>
      <if test="ct != null">
        and ct =  #{ct}
      </if>
      <if test="datekey != null">
        and datekey =  #{datekey}
      </if>
    </where>
  </sql>
  
  <!--the 'where' sql with table alias of search  -->
  <sql id="where_with_alias_sql">
    <where>
      <if test="tb.id != null">
        and id =  #{tb.id}
      </if>
      <if test="tb.openId != null">
        and openId =  #{tb.openId}
      </if>
      <if test="tb.nickName != null">
        and nickName =  #{tb.nickName}
      </if>
      <if test="tb.gender != null">
        and gender =  #{tb.gender}
      </if>
      <if test="tb.language != null">
        and language =  #{tb.language}
      </if>
      <if test="tb.city != null">
        and city =  #{tb.city}
      </if>
      <if test="tb.province != null">
        and province =  #{tb.province}
      </if>
      <if test="tb.country != null">
        and country =  #{tb.country}
      </if>
      <if test="tb.avatarUrl != null">
        and avatarUrl =  #{tb.avatarUrl}
      </if>
      <if test="tb.ct != null">
        and ct =  #{tb.ct}
      </if>
      <if test="tb.datekey != null">
        and datekey =  #{tb.datekey}
      </if>
    </where>
  </sql>
  
  <!-- the 'sort' sql for search -->
  <sql id="sort_sql">
    <trim>
      <if test="sort != null and sort.size() >0 ">
        ORDER BY
        <foreach collection="sort" index="key" item="value" open="" separator="," close="">
          <choose>
            <when test="key!=null and 'id'.equalsIgnoreCase(key)">
              id
            </when>
            <when test="key!=null and 'openId'.equalsIgnoreCase(key)">
              openId
            </when>
            <when test="key!=null and 'nickName'.equalsIgnoreCase(key)">
              nickName
            </when>
            <when test="key!=null and 'gender'.equalsIgnoreCase(key)">
              gender
            </when>
            <when test="key!=null and 'language'.equalsIgnoreCase(key)">
              language
            </when>
            <when test="key!=null and 'city'.equalsIgnoreCase(key)">
              city
            </when>
            <when test="key!=null and 'province'.equalsIgnoreCase(key)">
              province
            </when>
            <when test="key!=null and 'country'.equalsIgnoreCase(key)">
              country
            </when>
            <when test="key!=null and 'avatarUrl'.equalsIgnoreCase(key)">
              avatarUrl
            </when>
            <when test="key!=null and 'ct'.equalsIgnoreCase(key)">
              ct
            </when>
            <when test="key!=null and 'datekey'.equalsIgnoreCase(key)">
              datekey
            </when>
          </choose>
          <choose>
            <when test="'asc'.equalsIgnoreCase(value)">
              asc
            </when>
            <when test="'desc'.equalsIgnoreCase(value)">
              desc
            </when>
            <otherwise>
              asc
            </otherwise>
          </choose>
        </foreach>
      </if>
    </trim>
  </sql>
  
  <!-- the 'set' sql for search -->
  <sql id="update_sql">
    <set>
      <if test="id != null">
        id =  #{id} ,
      </if>
      <if test="openId != null">
        openId =  #{openId} ,
      </if>
      <if test="nickName != null">
        nickName =  #{nickName} ,
      </if>
      <if test="gender != null">
        gender =  #{gender} ,
      </if>
      <if test="language != null">
        language =  #{language} ,
      </if>
      <if test="city != null">
        city =  #{city} ,
      </if>
      <if test="province != null">
        province =  #{province} ,
      </if>
      <if test="country != null">
        country =  #{country} ,
      </if>
      <if test="avatarUrl != null">
        avatarUrl =  #{avatarUrl} ,
      </if>
      <if test="ct != null">
        ct =  #{ct} ,
      </if>
      <if test="datekey != null">
        datekey =  #{datekey} ,
      </if>
    </set>
  </sql>
  
  <!-- the 'set' sql with table alias for search -->
  <sql id="update_with_alias_sql">
    <set>
      <if test="tb.id != null">
        id = #{tb.id} ,
      </if>
      <if test="tb.openId != null">
        openId = #{tb.openId} ,
      </if>
      <if test="tb.nickName != null">
        nickName = #{tb.nickName} ,
      </if>
      <if test="tb.gender != null">
        gender = #{tb.gender} ,
      </if>
      <if test="tb.language != null">
        language = #{tb.language} ,
      </if>
      <if test="tb.city != null">
        city = #{tb.city} ,
      </if>
      <if test="tb.province != null">
        province = #{tb.province} ,
      </if>
      <if test="tb.country != null">
        country = #{tb.country} ,
      </if>
      <if test="tb.avatarUrl != null">
        avatarUrl = #{tb.avatarUrl} ,
      </if>
      <if test="tb.ct != null">
        ct = #{tb.ct} ,
      </if>
      <if test="tb.datekey != null">
        datekey = #{tb.datekey} ,
      </if>
    </set>
  </sql>
  
  <!-- update the table by 'id' sql -->
  <update id="updateById" parameterType="java.util.Map">
    UPDATE wx_user
    <include refid="update_with_alias_sql"/>
	<where>
		and id = #{id}
	</where>
  </update>

  <!-- insert value sql -->
  <insert id="insert" useGeneratedKeys="true" keyProperty="id">
    <![CDATA[
      INSERT INTO wx_user
        (
			openId,nickName,gender,language,city,	
			province,country,avatarUrl,ct,datekey	
		)
      VALUES
      	(
			#{openId},#{nickName},#{gender},#{language},#{city},	
			#{province},#{country},#{avatarUrl},#{ct},#{datekey}	
      	)
    ]]>
  </insert>

  <!-- insert into table with not null -->
  <insert id="insertNotNull" useGeneratedKeys="true" keyProperty="id">
    INSERT INTO  wx_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="openId != null">
        openId,
      </if>
      <if test="nickName != null">
        nickName,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="language != null">
        language,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="province != null">
        province,
      </if>
      <if test="country != null">
        country,
      </if>
      <if test="avatarUrl != null">
        avatarUrl,
      </if>
      <if test="ct != null">
        ct,
      </if>
      <if test="datekey != null">
        datekey,
      </if>
    </trim>
    <trim prefix="  VALUES(" suffix=")" suffixOverrides=",">
      <if test="id != null">
         #{id} ,
      </if>
      <if test="openId != null">
         #{openId} ,
      </if>
      <if test="nickName != null">
         #{nickName} ,
      </if>
      <if test="gender != null">
         #{gender} ,
      </if>
      <if test="language != null">
         #{language} ,
      </if>
      <if test="city != null">
         #{city} ,
      </if>
      <if test="province != null">
         #{province} ,
      </if>
      <if test="country != null">
         #{country} ,
      </if>
      <if test="avatarUrl != null">
         #{avatarUrl} ,
      </if>
      <if test="ct != null">
         #{ct} ,
      </if>
      <if test="datekey != null">
         #{datekey} ,
      </if>
    </trim>
  </insert>


  <!--insert batch into table -->
  <insert id="insertBatch" parameterType="java.util.List">
    INSERT INTO wx_user
      (
			openId,nickName,gender,language,city,	
			province,country,avatarUrl,ct,datekey	
		)
    VALUES
    <foreach collection="list" item="item" open="" separator="," close="">
    	(
			#{item.openId},#{item.nickName},#{item.gender},#{item.language},#{item.city},	
			#{item.province},#{item.country},#{item.avatarUrl},#{item.ct},#{item.datekey}	
    	)
    </foreach>
  </insert>
  
  <!-- get the records by id -->
  <select id="getById" resultMap="rm_WxUserEntity">
    SELECT
    <include refid="columns"/>
    <![CDATA[
      FROM wx_user 
    ]]>
	<where>
		and id =#{id}
	</where>
  </select>

  <!-- get the records by ids -->
  <select id="getByIds" resultMap="rm_WxUserEntity" parameterType="java.util.List">
    SELECT
    <include refid="columns"/>
    FROM wx_user
	  WHERE id in
    <foreach collection="list" item="item" open="(" separator="," close=")">
     #{item}      
    </foreach>
  </select>  

  <!-- get the records by condition -->
  <select id="select" resultMap="rm_WxUserEntity">
    SELECT 
    	<include refid="columns"/>
		FROM wx_user
    <include refid="where_with_alias_sql"/>
    <include refid="sort_sql"/>
    <choose>
      <when test="limit != null  and offset != null">
        limit #{limit} offset  #{offset}  
      </when>
      <when test="limit != null  and offset == null">
        limit #{limit} 
      </when>
    </choose>
  </select>

  <!-- get the count by condition -->
  <select id="selectCount" resultType="int">
    SELECT count(1) FROM wx_user
    <include refid="where_with_alias_sql"/>
  </select>
 
  <!-- delete the records by conditions -->
  <delete id="delete">
    DELETE FROM wx_user
    <include refid="where_sql"/>
  </delete>

  <!-- deleted the records by id -->
  <delete id="deleteById">
    DELETE FROM wx_user
    <where>
		and id = #{id}
    </where>
  </delete>

  <!-- deleted the records by ids -->
  <delete id="deleteByIds" parameterType="java.util.List">
    delete from wx_user 
      WHERE id in
    <foreach collection="list" item="item" open="(" separator="," close=")">      
	  #{item}
    </foreach>
  </delete> 
</mapper>
